library(geosphere)
# Tomo datos coordenados de argentina, segun el dataframe dado por map_data
arg <- map_data("world", region = "Argentina")
# Limites coordenados aproximados de Argentina
# los calculo como el maximo y el minimo de las coordenadas en el dataframe
xlim <- c(min(arg$long), max(arg$long))
ylim <- c(min(arg$lat), max(arg$lat))
# Origen (string) identificara el origen segun el dataframe que tenemos
# El color (string) sera un color que represente a este origen
ploteo <- function(origen, color) {
df.Origen <- new.df.frec.viajes %>%
filter(
Origen == origen
) %>%
select( long.or, lat.or, long.des, lat.des, n)
for (i in (1:length(df.Origen$long.or))){
inter <- gcIntermediate(c(df.Origen$long.or[i], df.Origen$lat.or[i]),
c(df.Origen$long.des[i], df.Origen$lat.des[i]),
n = df.Origen$n[i]*3,
addStartEnd=TRUE,
breakAtDateLine=T
)
lines(inter, col=color, lwd=df.Origen$n[i]/100)
}
}
# Creo un mapa para la Argentina
map( 'world', col="#cfcfcf", fill=TRUE, bg="white", lwd=0.05, xlim=xlim, ylim=ylim)
# Creo un vector con los origenes segun la variable orig usada mas arriba
vec.origenes <- names(orig)
for (i in (1:length(vec.origenes))){
ploteo(vec.origenes[i], colors()[i+7])
cat("Origen: ", vec.origenes[i], "color identificador : ", colors()[i+10], "\n")
}
points(x=new.df.frec.viajes$long.des,
y=new.df.frec.viajes$lat.des,
col="slateblue", cex=2, pch=20)
text(new.df.frec.viajes$Destino,
x=new.df.frec.viajes$long.des,
y=new.df.frec.viajes$lat.des,
col="#ff8142", cex=1, pos=4)
knitr::opts_chunk$set(collapse = TRUE)
# Corro las librerias necesarias
library(ggraph)
library(ggplot2)
# library(ggthemes)
library(dplyr)
library(igraph)
# Leo el csv con los datos
df.vuelos <- read.csv("./csv/vuelos_2021.csv")
df.vuelos
frec.viajes <- df.vuelos %>% select(Origen, Destino) %>% group_by(Origen,Destino) %>% summarise(n=n())
frec.viajes
# Tomo el dataframe del grafo y pido que no sea dirigido
grafo <- graph.data.frame(frec.viajes, directed = F)
plot.igraph( grafo,
vertex.frame.color = "Forestgreen",
vertex.size=degree(grafo, mode = "out"),
vertex.label.cex=c(2,2.5,3),
vertex.label.dist=0,
edge.color="black",
edge.curved = F,
edge.width = E(grafo)/30)
## La idea de este codigo es que cuando ustedes lo tengan a mano
## si oueden correrlo con , fig.show='animate' ouedan ver la
## Secuencia de como esta cada uno relacionado con todos.
## A mi me falto tener instalado ffmep en windows cosa
## que se me complico instalar antes de la entrega
grafica.grafo.origen <- function(df, filtro){
# Filtra el dataset
dt <- df %>% filter(Origen == filtro)
# crea el grafo
gf <- graph.data.frame(dt, directed = F)
# Dibuja el grafo
plot.igraph( gf,
vertex.frame.color = "Forestgreen",
vertex.label.cex=c(1.5,1,0.5),
vertex.label.dist=0,
edge.color="black",
edge.curved = F,
edge.width = E(gf)/30)
}
# nombres <- names(table(frec.viajes$Origen))
#for (i in (1:4)){
#  grafica.grafo.origen(frec.viajes, nombres[i])
#}
grafica.grafo.origen(frec.viajes, 'EZE')
grafica.grafo.origen(frec.viajes, 'AER')
coord.origen <- df.vuelos %>% select(Origen, long.origen, lat.origen)
orig  <- table(coord.origen$Origen)
longs <- table(coord.origen$long.origen)
dim(orig)
dim(longs)
orig
longs
data.coordenadas <- read.csv("./csv/sna_abril_2021_fixed_encoding.csv", encoding = 'UTF-8')
data.coordenadas <- data.coordenadas %>%
select(fna, ana, x, y) %>%
rename(
aeropuerto  = fna,
codigo.ANAC = ana,
longitud = x,
latitud  = y
)
df.origen <- merge( x=frec.viajes, y=data.coordenadas,
by.x='Origen', by.y='codigo.ANAC')
df.destino <- merge(x=frec.viajes, y=data.coordenadas,
by.x='Destino', by.y='codigo.ANAC')
df.destino <- df.destino %>% arrange(Origen, n )
df.origen  <- df.origen  %>% arrange(Origen, n )
new.df.frec.viajes <- df.origen %>%
mutate(
lat.des  = df.destino$latitud,
long.des = df.destino$longitud
) %>%
rename(
lat.or  = latitud,
long.or = longitud,
)
new.df.frec.viajes
library(ggmap)
library(maps)
library(mapdata)
library(geosphere)
# Tomo datos coordenados de argentina, segun el dataframe dado por map_data
arg <- map_data("world", region = "Argentina")
# Limites coordenados aproximados de Argentina
# los calculo como el maximo y el minimo de las coordenadas en el dataframe
xlim <- c(min(arg$long), max(arg$long))
ylim <- c(min(arg$lat), max(arg$lat))
# Origen (string) identificara el origen segun el dataframe que tenemos
# El color (string) sera un color que represente a este origen
ploteo <- function(origen, color) {
df.Origen <- new.df.frec.viajes %>%
filter( Origen == origen ) %>%
select( long.or, lat.or, long.des, lat.des, n)
for (i in (1:length(df.Origen$long.or))){
# LLamo a la funcion gcIntermediate  la cual permite identificar
# y dibujar tanto los puntos de origen destino como cualquier cosa
# dado un radio n dentre del mapa+
inter <- gcIntermediate(c(df.Origen$long.or[i], df.Origen$lat.or[i]),
c(df.Origen$long.des[i], df.Origen$lat.des[i]),
n = 1000,
addStartEnd=TRUE,
breakAtDateLine=T, sp=TRUE
)
# Dibujo la linea que conecta a los aeropuertos
# donde el ancho de esta tomara en valor reducido en
# proporciones iguales y asi identificar con su ancho la frecuencia
# de vuelos existentes entre estos tramos.
lines(inter, col=color, lwd=df.Origen$n[i]/70)
}
}
Dibujar.Mapa <- function(vector.origenes) {
# Creo un mapa para la Argentina
maps::map('world', col="#ebeded", fill=TRUE, bg="white", lwd=0.05, xlim=xlim, ylim=ylim)
# Creo un vector con los origenes segun la variable orig usada mas arriba
colores <- c()
for (i in (1:length(vector.origenes))){
colores <- c(colores, colors()[i*5])
ploteo(vector.origenes[i], colors()[i*5])
}
legend('topleft',
legend=c(vector.origenes),
col=c(colores),
lty = 1:2, cex=1.3)
points(x=new.df.frec.viajes$long.des,
y=new.df.frec.viajes$lat.des,
col="slateblue", cex=2, pch=20)
text(new.df.frec.viajes$Destino,
x=new.df.frec.viajes$long.des,
y=new.df.frec.viajes$lat.des,
col="#ff8142", cex=1, pos=4)
}
# Creo un vector con todos los origenes segun la variable utilizada
# en el chunk anterior
vec.origenes <- names(orig)
# LLamo a la funcion encargada de dibujar el mapa
# Pasandole todos los origenes que se relacionan
Dibujar.Mapa(vec.origenes)
Dibujar.Mapa(c("AER", "EZE"))
knitr::opts_chunk$set(collapse = TRUE)
library(ggplot2)
#Benford's Law
# Leo el csv con los datos
df.vuelos <- read.csv("./csv/vuelos_2021.csv")
#tomamos las distancias positivas y nos quedamos con los valores unicos
distancias_pos <- df.vuelos$distancia.km.x[which(df.vuelos$distancia.km.x > 0)]
unicas.dist    <- unique(as.integer(distancias_pos))
length(unicas.dist)
#dividimos en los dígitos(transformando primero en un vector de caracteres) y nos quedamos con el primero usando function(x) x[1]
primer.digito.unicos <- sapply(strsplit(as.character(unicas.dist), split=''), function(x) x[1])
#ahora construimos un data frame con las proporciones de los dígitos
df.dist <- as.data.frame(prop.table(table(primer.digito.unicos)))
df.dist$primer.digito.unicos <- as.integer(df.dist$primer.digito.unicos)
y <- function(x) log(1+1/x, 10)
#realizamos el gráfico
ggplot(df.dist, mapping=aes(x=primer.digito.unicos, y=Freq)) +
geom_bar(stat='identity', fill='blue') +
labs(x='Dígito', y='Proporción de apariciones', title='Ley de Benford en distancias') +
theme(plot.title = element_text(hjust = 0.5))+
geom_line(mapping = aes(y = y(primer.digito.unicos)),size=1.3) +
scale_x_continuous(breaks=1:9, labels=c('1','2','3','4','5','6','7','8','9'))
knitr::opts_chunk$set(collapse = TRUE)
library(tidyverse)
vuelos_ant <- read.csv('./csv/datos_14_a_20.csv', sep=';')
data_2021 <- read.csv('./csv/202109-informe-ministerio.csv', sep=';', encoding = 'UTF-8')
#Construyo un df que contenga los vuelos del 2021 junto con los de años anteriores
datos_ant <- vuelos_ant %>%
select(Tipo.de.Movimiento, Fecha, Clase.de.Vuelo)
datos_act <- data_2021 %>%
mutate(Clase.de.Vuelo = Clase.de.Vuelo..todos.los.vuelos.) %>%
select(Tipo.de.Movimiento, Fecha, Clase.de.Vuelo)
vuelos_completos <- rbind(datos_ant, datos_act)
#dim(datos_ant)[1] + dim(datos_act)[1] == dim(vuelos_completos)[1]
#Vamos a tomar despegues y vuelos regulares
unique(vuelos_completos$Tipo.de.Movimiento)
unique(vuelos_completos$Clase.de.Vuelo)
#algunos estan mal anotados como 'Despegue  ', los corrijo
vuelos_completos.desp <- vuelos_completos %>%
mutate(Tipo.de.Movimiento = ifelse(Tipo.de.Movimiento=='Despegue  ',
'Despegue',Tipo.de.Movimiento),
Clase.de.Vuelo = ifelse(Clase.de.Vuelo=='Regular                             ','Regular',Clase.de.Vuelo)) %>%
filter(Tipo.de.Movimiento=='Despegue', Clase.de.Vuelo=='Regular')
#Calculo el año de cada vuelo para poder agruparlos
vuelos_completos.desp <- vuelos_completos.desp %>%
#el 3er elemento en fecha contiene el año
mutate(Year=sapply(strsplit(Fecha, split='/'), function(x) x[[3]]))
#Agrupo los vuelos a partir del año (no tomo 2021, los meses estan incompletos)
vuelos.by.year <- vuelos_completos.desp %>% filter(Year != 2021) %>%
group_by(Year) %>% summarise(count=n())
ggplot(vuelos.by.year, mapping=aes(x=Year,y=count, group=2)) +
geom_smooth(col='black', size=1.1) +
geom_bar(stat='identity', fill='blue', alpha=.5) +
labs(x='Años', y='Cantidad de vuelos', title='Vuelos por año') +
theme(plot.title = element_text(hjust = 0.5)) +
ylim(c(0, 2.0e5))
#Agrego columna con los meses
vuelos_completos.desp <- vuelos_completos.desp %>%
mutate(Month=sapply(strsplit(Fecha, split='/'), function(x) x[[2]]))
unique(vuelos_completos.desp$Month)
#Algunos fueron anotados como '1' en lugar de '01', '2' en vez de '02'...etc
#quiero los nombres de los meses en vez del numero correspondiente
meses <- c('Enero','Febrero','Marzo','Abril','Mayo','Junio','Julio','Agosto','Septiembre','Octubre','Noviembre','Diciembre')
vuelos_completos.desp <- vuelos_completos.desp %>%
mutate(Month = case_when(Month == '01' ~ meses[1],
Month == '02' ~ meses[2],
Month == '03' ~ meses[3],
Month == '04' ~ meses[4],
Month == '05' ~ meses[5],
Month == '06' ~ meses[6],
Month == '07' ~ meses[7],
Month == '08' ~ meses[8],
Month == '09' ~ meses[9],
Month == '10' ~ meses[10],
Month == '11' ~ meses[11],
Month == '12' ~ meses[12],
#ahora los que tenian otra notacion
Month == '1' ~ meses[1],
Month == '2' ~ meses[2],
Month == '3' ~ meses[3],
Month == '4' ~ meses[4],
Month == '5' ~ meses[5],
Month == '6' ~ meses[6],
Month == '7' ~ meses[7],
Month == '8' ~ meses[8],
Month == '9' ~ meses[9]))
unique(vuelos_completos.desp$Month)
#Creo una lista donde voy a guardar la cantidad de vuelos por mes a lo largo de los años
graficos <- list()
i <- 1
for(mes in meses) {
grafico_mes <- filter(vuelos_completos.desp, Month==mes) %>%
group_by(Year) %>% summarise(count=n()) %>%
ggplot(vuelos.by.year, mapping=aes(x=Year,y=count, group=2)) +
geom_smooth(col='black', size=1.1, se=F) +
geom_bar(stat='identity', fill='blue', alpha=.5) +
labs(x='Años', y='Cantidad de vuelos', title=mes) +
theme(plot.title = element_text(hjust = 0.5)) +
ylim(c(0, 18000))
graficos[[i]] <- grafico_mes
i <- i+1
}
library(gridExtra)
#?grid.arrange()
grid.arrange(grobs=graficos, nrow=6, ncol=2)
vuelos_2020 <- filter(vuelos_completos.desp, Year==2020) %>%
group_by(Month) %>% summarise(count=n())
#los meses aparecen desordenados en vuelos_2020, los ordeno a partir del vector de meses que ya tengo construido
vuelos_2020$Month <- factor(vuelos_2020$Month, levels=meses)
#ahora reordeno los meses en el data frame
vuelos_2020 <- vuelos_2020[order(vuelos_2020$Month), ]
ggplot(vuelos_2020, mapping=aes(x=Month, y=count, group=2)) +
geom_smooth(col='black', size=1.1, se=F) +
geom_bar(stat='identity', fill='blue', alpha=.5) +
labs(x='Mes', y='Cantidad de vuelos', title='Vuelos a lo largo del 2020') +
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 90)) +
ylim(c(0, 18000))
vuelos_2020
mean(vuelos_2020$count[4:9])
vuelos.agrupados <- vuelos_completos.desp %>% group_by(Month, Year) %>%
summarise(count=n())
promedio.mes <- c()
for(m in meses) {
#me quedo con mes m en cada iteracion y calculo el promedio del total de vuelos para ese mes a lo   largo de los años
promedio.mes <- c(promedio.mes, mean(vuelos.agrupados[vuelos.agrupados$Month==m,]$count))
}
summary(promedio.mes)
#comparo respecto al promedio antes de la pandemia
vuelos.agrupados.ant <- vuelos_completos.desp %>% filter(Year < 2020) %>%
group_by(Month, Year) %>% summarise(count=n())
promedio.mes.ant <- c()
for(m in meses) {
#me quedo con mes m en cada iteracion y calculo el promedio del total de vuelos para ese mes a lo   largo de los años
promedio.mes.ant <- c(promedio.mes.ant,
mean(vuelos.agrupados.ant[vuelos.agrupados.ant$Month==m,]$count))
}
summary(promedio.mes.ant)
meses <- factor(meses, levels=meses) #sin agregar esta línea los meses aparecen en otro orden en el gráfico
ggplot(mapping = aes(x=meses, y=promedio.mes.ant, group=2)) +
geom_smooth(col='black', size=1.1, se=F) +
geom_bar(stat='identity', fill='blue', alpha=.5) +
labs(x='Mes', y='Cantidad de vuelos', title='Promedio de vuelos a lo largo de los meses') +
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 90)) +
ylim(c(0,12800))
vuelos.agrupados.ant$Month <- factor(vuelos.agrupados.ant$Month, levels=meses)
vuelos.agrupados.ant <- vuelos.agrupados.ant[order(vuelos.agrupados.ant$Month),]
ggplot(vuelos.agrupados.ant, mapping = aes(x=Month, y=count, fill=Month)) +
geom_violin(alpha=0.2) +
geom_boxplot(outlier.shape=NA) +
labs(x='Mes', y='Cantidad de vuelos', title='Vuelos por mes a lo largo de los años')+
theme(plot.title=element_text(hjust=0.5),
axis.text.x = element_text(angle=90))
#Nos interesa quedarnos unicamente con los vuelos que tienen pasajeros
dim(data_2021)
vuelos_con_pasajeros <- data_2021 %>% filter(Pasajeros > 0)
dim(vuelos_con_pasajeros)
#veamos que modelos de avion tenemos
unique(vuelos_con_pasajeros$Aeronave)
#hay muchos modelos, veamos cuales son los mas frecuentes
agrupados <- vuelos_con_pasajeros %>% filter(Aeronave != '0') %>% group_by(Aeronave) %>% summarise(count=n()) %>% arrange(desc(count))
quantile(agrupados$count)
mas.frecuentes <- agrupados[1:20, 1]
mas.frecuentes <- unlist(mas.frecuentes$Aeronave)
#ahora nos quedamos con los vuelos con modelo de avion entre los mas frecuentes
vuelos_frecuentes <- vuelos_con_pasajeros %>% filter(Aeronave %in% mas.frecuentes) %>%
select(Aeronave, Pasajeros) %>% arrange(Pasajeros)
arrange(vuelos_frecuentes, desc(Pasajeros))
ggplot(vuelos_frecuentes,
mapping=aes(x=reorder(Aeronave, Pasajeros), y=Pasajeros, fill=Aeronave)) +
geom_boxplot(show.legend=F) +
labs(x='Modelo', y='Cantidad de pasajeros',
title='Distribución de pasajeros en modelos más frecuentes') +
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 90)) +
ylim(c(0, 200))
knitr::opts_chunk$set(collapse = TRUE)
library(tidyverse)
vuelos_ant <- read.csv('./csv/datos_14_a_20.csv', sep=';')
data_2021 <- read.csv('./csv/202109-informe-ministerio.csv', sep=';', encoding = 'UTF-8')
#Construyo un df que contenga los vuelos del 2021 junto con los de años anteriores
datos_ant <- vuelos_ant %>%
select(Tipo.de.Movimiento, Fecha, Clase.de.Vuelo)
datos_act <- data_2021 %>%
mutate(Clase.de.Vuelo = Clase.de.Vuelo..todos.los.vuelos.) %>%
select(Tipo.de.Movimiento, Fecha, Clase.de.Vuelo)
vuelos_completos <- rbind(datos_ant, datos_act)
#dim(datos_ant)[1] + dim(datos_act)[1] == dim(vuelos_completos)[1]
#Vamos a tomar despegues y vuelos regulares
unique(vuelos_completos$Tipo.de.Movimiento)
unique(vuelos_completos$Clase.de.Vuelo)
#algunos estan mal anotados como 'Despegue  ', los corrijo
vuelos_completos.desp <- vuelos_completos %>%
mutate(Tipo.de.Movimiento = ifelse(Tipo.de.Movimiento=='Despegue  ',
'Despegue',Tipo.de.Movimiento),
Clase.de.Vuelo = ifelse(Clase.de.Vuelo=='Regular                             ','Regular',Clase.de.Vuelo)) %>%
filter(Tipo.de.Movimiento=='Despegue', Clase.de.Vuelo=='Regular')
#Calculo el año de cada vuelo para poder agruparlos
vuelos_completos.desp <- vuelos_completos.desp %>%
#el 3er elemento en fecha contiene el año
mutate(Year=sapply(strsplit(Fecha, split='/'), function(x) x[[3]]))
#Agrupo los vuelos a partir del año (no tomo 2021, los meses estan incompletos)
vuelos.by.year <- vuelos_completos.desp %>% filter(Year != 2021) %>%
group_by(Year) %>% summarise(count=n())
ggplot(vuelos.by.year, mapping=aes(x=Year,y=count, group=2)) +
geom_smooth(col='black', size=1.1) +
geom_bar(stat='identity', fill='blue', alpha=.5) +
labs(x='Años', y='Cantidad de vuelos', title='Vuelos por año') +
theme(plot.title = element_text(hjust = 0.5)) +
ylim(c(0, 2.0e5))
#Agrego columna con los meses
vuelos_completos.desp <- vuelos_completos.desp %>%
mutate(Month=sapply(strsplit(Fecha, split='/'), function(x) x[[2]]))
unique(vuelos_completos.desp$Month)
#Algunos fueron anotados como '1' en lugar de '01', '2' en vez de '02'...etc
#quiero los nombres de los meses en vez del numero correspondiente
meses <- c('Enero','Febrero','Marzo','Abril','Mayo','Junio','Julio','Agosto','Septiembre','Octubre','Noviembre','Diciembre')
vuelos_completos.desp <- vuelos_completos.desp %>%
mutate(Month = case_when(Month == '01' ~ meses[1],
Month == '02' ~ meses[2],
Month == '03' ~ meses[3],
Month == '04' ~ meses[4],
Month == '05' ~ meses[5],
Month == '06' ~ meses[6],
Month == '07' ~ meses[7],
Month == '08' ~ meses[8],
Month == '09' ~ meses[9],
Month == '10' ~ meses[10],
Month == '11' ~ meses[11],
Month == '12' ~ meses[12],
#ahora los que tenian otra notacion
Month == '1' ~ meses[1],
Month == '2' ~ meses[2],
Month == '3' ~ meses[3],
Month == '4' ~ meses[4],
Month == '5' ~ meses[5],
Month == '6' ~ meses[6],
Month == '7' ~ meses[7],
Month == '8' ~ meses[8],
Month == '9' ~ meses[9]))
unique(vuelos_completos.desp$Month)
#Creo una lista donde voy a guardar la cantidad de vuelos por mes a lo largo de los años
graficos <- list()
i <- 1
for(mes in meses) {
grafico_mes <- filter(vuelos_completos.desp, Month==mes) %>%
group_by(Year) %>% summarise(count=n()) %>%
ggplot(vuelos.by.year, mapping=aes(x=Year,y=count, group=2)) +
geom_smooth(col='black', size=1.1, se=F) +
geom_bar(stat='identity', fill='blue', alpha=.5) +
labs(x='Años', y='Cantidad de vuelos', title=mes) +
theme(plot.title = element_text(hjust = 0.5)) +
ylim(c(0, 18000))
graficos[[i]] <- grafico_mes
i <- i+1
}
library(gridExtra)
#?grid.arrange()
grid.arrange(grobs=graficos, nrow=6, ncol=2)
vuelos_2020 <- filter(vuelos_completos.desp, Year==2020) %>%
group_by(Month) %>% summarise(count=n())
#los meses aparecen desordenados en vuelos_2020, los ordeno a partir del vector de meses que ya tengo construido
vuelos_2020$Month <- factor(vuelos_2020$Month, levels=meses)
#ahora reordeno los meses en el data frame
vuelos_2020 <- vuelos_2020[order(vuelos_2020$Month), ]
ggplot(vuelos_2020, mapping=aes(x=Month, y=count, group=2)) +
geom_smooth(col='black', size=1.1, se=F) +
geom_bar(stat='identity', fill='blue', alpha=.5) +
labs(x='Mes', y='Cantidad de vuelos', title='Vuelos a lo largo del 2020') +
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 90)) +
ylim(c(0, 18000))
vuelos_2020
mean(vuelos_2020$count[4:9])
vuelos.agrupados <- vuelos_completos.desp %>% group_by(Month, Year) %>%
summarise(count=n())
promedio.mes <- c()
for(m in meses) {
#me quedo con mes m en cada iteracion y calculo el promedio del total de vuelos para ese mes a lo   largo de los años
promedio.mes <- c(promedio.mes, mean(vuelos.agrupados[vuelos.agrupados$Month==m,]$count))
}
summary(promedio.mes)
#comparo respecto al promedio antes de la pandemia
vuelos.agrupados.ant <- vuelos_completos.desp %>% filter(Year < 2020) %>%
group_by(Month, Year) %>% summarise(count=n())
promedio.mes.ant <- c()
for(m in meses) {
#me quedo con mes m en cada iteracion y calculo el promedio del total de vuelos para ese mes a lo   largo de los años
promedio.mes.ant <- c(promedio.mes.ant,
mean(vuelos.agrupados.ant[vuelos.agrupados.ant$Month==m,]$count))
}
summary(promedio.mes.ant)
meses <- factor(meses, levels=meses) #sin agregar esta línea los meses aparecen en otro orden en el gráfico
ggplot(mapping = aes(x=meses, y=promedio.mes.ant, group=2)) +
geom_smooth(col='black', size=1.1, se=F) +
geom_bar(stat='identity', fill='blue', alpha=.5) +
labs(x='Mes', y='Cantidad de vuelos', title='Promedio de vuelos a lo largo de los meses') +
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 90)) +
ylim(c(0,12800))
vuelos.agrupados.ant$Month <- factor(vuelos.agrupados.ant$Month, levels=meses)
vuelos.agrupados.ant <- vuelos.agrupados.ant[order(vuelos.agrupados.ant$Month),]
ggplot(vuelos.agrupados.ant, mapping = aes(x=Month, y=count, fill=Month)) +
geom_violin(alpha=0.2) +
geom_boxplot(outlier.shape=NA) +
labs(x='Mes', y='Cantidad de vuelos', title='Vuelos por mes a lo largo de los años')+
theme(plot.title=element_text(hjust=0.5),
axis.text.x = element_text(angle=90))
#Nos interesa quedarnos unicamente con los vuelos que tienen pasajeros
dim(data_2021)
vuelos_con_pasajeros <- data_2021 %>% filter(Pasajeros > 0)
dim(vuelos_con_pasajeros)
#veamos que modelos de avion tenemos
unique(vuelos_con_pasajeros$Aeronave)
#hay muchos modelos, veamos cuales son los mas frecuentes
agrupados <- vuelos_con_pasajeros %>% filter(Aeronave != '0') %>% group_by(Aeronave) %>% summarise(count=n()) %>% arrange(desc(count))
quantile(agrupados$count)
mas.frecuentes <- agrupados[1:20, 1]
mas.frecuentes <- unlist(mas.frecuentes$Aeronave)
#ahora nos quedamos con los vuelos con modelo de avion entre los mas frecuentes
vuelos_frecuentes <- vuelos_con_pasajeros %>% filter(Aeronave %in% mas.frecuentes) %>%
select(Aeronave, Pasajeros) %>% arrange(Pasajeros)
arrange(vuelos_frecuentes, desc(Pasajeros))
ggplot(vuelos_frecuentes,
mapping=aes(x=reorder(Aeronave, Pasajeros), y=Pasajeros, fill=Aeronave)) +
geom_boxplot(show.legend=F) +
labs(x='Modelo', y='Cantidad de pasajeros',
title='Distribución de pasajeros en modelos más frecuentes') +
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(angle = 90)) +
ylim(c(0, 200))
