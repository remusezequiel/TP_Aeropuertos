map( 'world', col="#c7d9cc", fill=TRUE, bg="white", lwd=0.05, xlim=xlim, ylim=ylim)
# ploteo <- function(df,) {}
coord.Origen.AER <- new.df.frec.viajes %>%
filter(Origen == "AER") %>%
select( long.or, lat.or, long.des, lat.des, n)
for (i in (1:length(coord.Origen.AER$long.or))){
inter <- gcIntermediate(c( coord.Origen.AER$long.or[i], coord.Origen.AER$lat.or[i]),
c( coord.Origen.AER$long.des[i], coord.Origen.AER$lat.des[i]),
n= coord.Origen.AER$n[i]*3,
addStartEnd=TRUE, breakAtDateLine=F
)
lines(inter, col="#f0a316", lwd=1.8)
}
coord.Origen.EZE <- new.df.frec.viajes %>%
filter(Origen == "EZE") %>%
select( long.or, lat.or, long.des, lat.des, n)
for (i in (1:length(coord.Origen.EZE$long.or))){
inter <- gcIntermediate(c( coord.Origen.EZE$long.or[i], coord.Origen.EZE$lat.or[i]),
c( coord.Origen.EZE$long.des[i], coord.Origen.EZE$lat.des[i]),
n= coord.Origen.EZE$n[i]*3,
addStartEnd=TRUE)
lines(inter, col="#4bcacc", lwd=(coord.Origen.EZE$n[i]/100))
}
points(x=new.df.frec.viajes$long.des,
y=new.df.frec.viajes$lat.des,
col="slateblue", cex=2, pch=20)
text(new.df.frec.viajes$Destino,
x=new.df.frec.viajes$long.des,
y=new.df.frec.viajes$lat.des,
col="orange", cex=1, pos=4)
library(ggmap)
library(maps)
library(mapdata)
library(geosphere)
# Tomo datos coordenados de argentina, segun el dataframe dado por map_data
arg <- map_data("world", region = "Argentina")
# Limites coordenados aproximados de Argentina
# los calculo como el maximo y el minimo de las coordenadas en el dataframe
xlim <- c(min(arg$long), max(arg$long))
ylim <- c(min(arg$lat), max(arg$lat))
# Creo un mapa para la Argentina
map( 'world', col="#a5b0a8", fill=TRUE, bg="white", lwd=0.05, xlim=xlim, ylim=ylim)
# ploteo <- function(df,) {}
coord.Origen.AER <- new.df.frec.viajes %>%
filter(Origen == "AER") %>%
select( long.or, lat.or, long.des, lat.des, n)
for (i in (1:length(coord.Origen.AER$long.or))){
inter <- gcIntermediate(c( coord.Origen.AER$long.or[i], coord.Origen.AER$lat.or[i]),
c( coord.Origen.AER$long.des[i], coord.Origen.AER$lat.des[i]),
n= coord.Origen.AER$n[i]*3,
addStartEnd=TRUE, breakAtDateLine=F
)
lines(inter, col="#f0a316", lwd=1.8)
}
coord.Origen.EZE <- new.df.frec.viajes %>%
filter(Origen == "EZE") %>%
select( long.or, lat.or, long.des, lat.des, n)
for (i in (1:length(coord.Origen.EZE$long.or))){
inter <- gcIntermediate(c( coord.Origen.EZE$long.or[i], coord.Origen.EZE$lat.or[i]),
c( coord.Origen.EZE$long.des[i], coord.Origen.EZE$lat.des[i]),
n= coord.Origen.EZE$n[i]*3,
addStartEnd=TRUE)
lines(inter, col="#4bcacc", lwd=(coord.Origen.EZE$n[i]/100))
}
points(x=new.df.frec.viajes$long.des,
y=new.df.frec.viajes$lat.des,
col="slateblue", cex=2, pch=20)
text(new.df.frec.viajes$Destino,
x=new.df.frec.viajes$long.des,
y=new.df.frec.viajes$lat.des,
col="orange", cex=1, pos=4)
library(ggmap)
library(maps)
library(mapdata)
library(geosphere)
# Tomo datos coordenados de argentina, segun el dataframe dado por map_data
arg <- map_data("world", region = "Argentina")
# Limites coordenados aproximados de Argentina
# los calculo como el maximo y el minimo de las coordenadas en el dataframe
xlim <- c(min(arg$long), max(arg$long))
ylim <- c(min(arg$lat), max(arg$lat))
# Creo un mapa para la Argentina
map( 'world', col="#cfcfcf", fill=TRUE, bg="white", lwd=0.05, xlim=xlim, ylim=ylim)
# ploteo <- function(df,) {}
coord.Origen.AER <- new.df.frec.viajes %>%
filter(Origen == "AER") %>%
select( long.or, lat.or, long.des, lat.des, n)
for (i in (1:length(coord.Origen.AER$long.or))){
inter <- gcIntermediate(c( coord.Origen.AER$long.or[i], coord.Origen.AER$lat.or[i]),
c( coord.Origen.AER$long.des[i], coord.Origen.AER$lat.des[i]),
n= coord.Origen.AER$n[i]*3,
addStartEnd=TRUE, breakAtDateLine=F
)
lines(inter, col="#f0a316", lwd=1.8)
}
coord.Origen.EZE <- new.df.frec.viajes %>%
filter(Origen == "EZE") %>%
select( long.or, lat.or, long.des, lat.des, n)
for (i in (1:length(coord.Origen.EZE$long.or))){
inter <- gcIntermediate(c( coord.Origen.EZE$long.or[i], coord.Origen.EZE$lat.or[i]),
c( coord.Origen.EZE$long.des[i], coord.Origen.EZE$lat.des[i]),
n= coord.Origen.EZE$n[i]*3,
addStartEnd=TRUE)
lines(inter, col="#4bcacc", lwd=(coord.Origen.EZE$n[i]/100))
}
points(x=new.df.frec.viajes$long.des,
y=new.df.frec.viajes$lat.des,
col="slateblue", cex=2, pch=20)
text(new.df.frec.viajes$Destino,
x=new.df.frec.viajes$long.des,
y=new.df.frec.viajes$lat.des,
col="orange", cex=1, pos=4)
library(ggmap)
library(maps)
library(mapdata)
library(geosphere)
# Tomo datos coordenados de argentina, segun el dataframe dado por map_data
arg <- map_data("world", region = "Argentina")
# Limites coordenados aproximados de Argentina
# los calculo como el maximo y el minimo de las coordenadas en el dataframe
xlim <- c(min(arg$long), max(arg$long))
ylim <- c(min(arg$lat), max(arg$lat))
# Creo un mapa para la Argentina
map( 'world', col="#cfcfcf", fill=TRUE, bg="white", lwd=0.05, xlim=xlim, ylim=ylim)
# ploteo <- function(df,) {}
coord.Origen.AER <- new.df.frec.viajes %>%
filter(Origen == "AER") %>%
select( long.or, lat.or, long.des, lat.des, n)
for (i in (1:length(coord.Origen.AER$long.or))){
inter <- gcIntermediate(c( coord.Origen.AER$long.or[i], coord.Origen.AER$lat.or[i]),
c( coord.Origen.AER$long.des[i], coord.Origen.AER$lat.des[i]),
n= coord.Origen.AER$n[i]*3,
addStartEnd=TRUE, breakAtDateLine=F
)
lines(inter, col="#f0a316", lwd=1.8)
}
coord.Origen.EZE <- new.df.frec.viajes %>%
filter(Origen == "EZE") %>%
select( long.or, lat.or, long.des, lat.des, n)
for (i in (1:length(coord.Origen.EZE$long.or))){
inter <- gcIntermediate(c( coord.Origen.EZE$long.or[i], coord.Origen.EZE$lat.or[i]),
c( coord.Origen.EZE$long.des[i], coord.Origen.EZE$lat.des[i]),
n= coord.Origen.EZE$n[i]*3,
addStartEnd=TRUE)
lines(inter, col="#4bcacc", lwd=(coord.Origen.EZE$n[i]/100))
}
points(x=new.df.frec.viajes$long.des,
y=new.df.frec.viajes$lat.des,
col="slateblue", cex=2, pch=20)
text(new.df.frec.viajes$Destino,
x=new.df.frec.viajes$long.des,
y=new.df.frec.viajes$lat.des,
col="#ff8142", cex=1, pos=4)
library(ggmap)
library(maps)
library(mapdata)
library(geosphere)
# Tomo datos coordenados de argentina, segun el dataframe dado por map_data
arg <- map_data("world", region = "Argentina")
# Limites coordenados aproximados de Argentina
# los calculo como el maximo y el minimo de las coordenadas en el dataframe
xlim <- c(min(arg$long), max(arg$long))
ylim <- c(min(arg$lat), max(arg$lat))
# Creo un mapa para la Argentina
map( 'world', col="#cfcfcf", fill=TRUE, bg="white", lwd=0.05, xlim=xlim, ylim=ylim)
# ploteo <- function(df,) {}
coord.Origen.AER <- new.df.frec.viajes %>%
filter(Origen == "AER") %>%
select( long.or, lat.or, long.des, lat.des, n)
for (i in (1:length(coord.Origen.AER$long.or))){
inter <- gcIntermediate(c( coord.Origen.AER$long.or[i], coord.Origen.AER$lat.or[i]),
c( coord.Origen.AER$long.des[i], coord.Origen.AER$lat.des[i]),
n= coord.Origen.AER$n[i]*3,
addStartEnd=TRUE, breakAtDateLine=T
)
lines(inter, col="#f0a316", lwd=1.8)
}
coord.Origen.EZE <- new.df.frec.viajes %>%
filter(Origen == "EZE") %>%
select( long.or, lat.or, long.des, lat.des, n)
for (i in (1:length(coord.Origen.EZE$long.or))){
inter <- gcIntermediate(c( coord.Origen.EZE$long.or[i], coord.Origen.EZE$lat.or[i]),
c( coord.Origen.EZE$long.des[i], coord.Origen.EZE$lat.des[i]),
n= coord.Origen.EZE$n[i]*3,
addStartEnd=TRUE)
lines(inter, col="#4bcacc", lwd=(coord.Origen.EZE$n[i]/100))
}
points(x=new.df.frec.viajes$long.des,
y=new.df.frec.viajes$lat.des,
col="slateblue", cex=2, pch=20)
text(new.df.frec.viajes$Destino,
x=new.df.frec.viajes$long.des,
y=new.df.frec.viajes$lat.des,
col="#ff8142", cex=1, pos=4)
head(colors(), n = 30)
colors(1)
colors(2)
colors(3)
colors()[1]
library(ggmap)
library(maps)
library(mapdata)
library(geosphere)
# Tomo datos coordenados de argentina, segun el dataframe dado por map_data
arg <- map_data("world", region = "Argentina")
# Limites coordenados aproximados de Argentina
# los calculo como el maximo y el minimo de las coordenadas en el dataframe
xlim <- c(min(arg$long), max(arg$long))
ylim <- c(min(arg$lat), max(arg$lat))
# Origen (string) identificara el origen segun el dataframe que tenemos
# El color (string) sera un color que represente a este origen
ploteo <- function(origen, color) {
df.Origen <- new.df.frec.viajes %>%
filter(
Origen == origen
) %>%
select( long.or, lat.or, long.des, lat.des, n)
for (i in (1:length(df.Origen$long.or))){
inter <- gcIntermediate(c(df.Origen$long.or[i], df.Origen$lat.or[i]),
c(df.Origen$long.des[i], df.Origen$lat.des[i]),
n = df.Origen$n[i]*3,
addStartEnd=TRUE,
breakAtDateLine=T
)
lines(inter, col=color, lwd=1.8)
}
}
# Creo un mapa para la Argentina
map( 'world', col="#cfcfcf", fill=TRUE, bg="white", lwd=0.05, xlim=xlim, ylim=ylim)
# Creo un vector con los origenes segun la variable orig usada mas arriba
vec.origenes <- names(orig)
for (i in (1:length(vec.origenes))){
ploteo(vec.origenes[i], color()[i+5])
}
library(ggmap)
library(maps)
library(mapdata)
library(geosphere)
# Tomo datos coordenados de argentina, segun el dataframe dado por map_data
arg <- map_data("world", region = "Argentina")
# Limites coordenados aproximados de Argentina
# los calculo como el maximo y el minimo de las coordenadas en el dataframe
xlim <- c(min(arg$long), max(arg$long))
ylim <- c(min(arg$lat), max(arg$lat))
# Origen (string) identificara el origen segun el dataframe que tenemos
# El color (string) sera un color que represente a este origen
ploteo <- function(origen, color) {
df.Origen <- new.df.frec.viajes %>%
filter(
Origen == origen
) %>%
select( long.or, lat.or, long.des, lat.des, n)
for (i in (1:length(df.Origen$long.or))){
inter <- gcIntermediate(c(df.Origen$long.or[i], df.Origen$lat.or[i]),
c(df.Origen$long.des[i], df.Origen$lat.des[i]),
n = df.Origen$n[i]*3,
addStartEnd=TRUE,
breakAtDateLine=T
)
lines(inter, col=color, lwd=1.8)
}
}
# Creo un mapa para la Argentina
map( 'world', col="#cfcfcf", fill=TRUE, bg="white", lwd=0.05, xlim=xlim, ylim=ylim)
# Creo un vector con los origenes segun la variable orig usada mas arriba
vec.origenes <- names(orig)
for (i in (1:length(vec.origenes))){
ploteo(vec.origenes[i], colors()[i+5])
}
points(x=new.df.frec.viajes$long.des,
y=new.df.frec.viajes$lat.des,
col="slateblue", cex=2, pch=20)
text(new.df.frec.viajes$Destino,
x=new.df.frec.viajes$long.des,
y=new.df.frec.viajes$lat.des,
col="#ff8142", cex=1, pos=4)
library(ggmap)
library(maps)
library(mapdata)
library(geosphere)
# Tomo datos coordenados de argentina, segun el dataframe dado por map_data
arg <- map_data("world", region = "Argentina")
# Limites coordenados aproximados de Argentina
# los calculo como el maximo y el minimo de las coordenadas en el dataframe
xlim <- c(min(arg$long), max(arg$long))
ylim <- c(min(arg$lat), max(arg$lat))
# Origen (string) identificara el origen segun el dataframe que tenemos
# El color (string) sera un color que represente a este origen
ploteo <- function(origen, color) {
df.Origen <- new.df.frec.viajes %>%
filter(
Origen == origen
) %>%
select( long.or, lat.or, long.des, lat.des, n)
for (i in (1:length(df.Origen$long.or))){
inter <- gcIntermediate(c(df.Origen$long.or[i], df.Origen$lat.or[i]),
c(df.Origen$long.des[i], df.Origen$lat.des[i]),
n = df.Origen$n[i]*3,
addStartEnd=TRUE,
breakAtDateLine=T
)
lines(inter, col=color, lwd=1.8)
}
}
# Creo un mapa para la Argentina
map( 'world', col="#cfcfcf", fill=TRUE, bg="white", lwd=0.05, xlim=xlim, ylim=ylim)
# Creo un vector con los origenes segun la variable orig usada mas arriba
vec.origenes <- names(orig)
for (i in (1:length(vec.origenes))){
ploteo(vec.origenes[i], colors()[i+7])
}
points(x=new.df.frec.viajes$long.des,
y=new.df.frec.viajes$lat.des,
col="slateblue", cex=2, pch=20)
text(new.df.frec.viajes$Destino,
x=new.df.frec.viajes$long.des,
y=new.df.frec.viajes$lat.des,
col="#ff8142", cex=1, pos=4)
library(ggmap)
library(maps)
library(mapdata)
library(geosphere)
# Tomo datos coordenados de argentina, segun el dataframe dado por map_data
arg <- map_data("world", region = "Argentina")
# Limites coordenados aproximados de Argentina
# los calculo como el maximo y el minimo de las coordenadas en el dataframe
xlim <- c(min(arg$long), max(arg$long))
ylim <- c(min(arg$lat), max(arg$lat))
# Origen (string) identificara el origen segun el dataframe que tenemos
# El color (string) sera un color que represente a este origen
ploteo <- function(origen, color) {
df.Origen <- new.df.frec.viajes %>%
filter(
Origen == origen
) %>%
select( long.or, lat.or, long.des, lat.des, n)
for (i in (1:length(df.Origen$long.or))){
inter <- gcIntermediate(c(df.Origen$long.or[i], df.Origen$lat.or[i]),
c(df.Origen$long.des[i], df.Origen$lat.des[i]),
n = df.Origen$n[i]*3,
addStartEnd=TRUE,
breakAtDateLine=T
)
lines(inter, col=color, lwd=df.Origen$n[i]/100)
}
}
# Creo un mapa para la Argentina
map( 'world', col="#cfcfcf", fill=TRUE, bg="white", lwd=0.05, xlim=xlim, ylim=ylim)
# Creo un vector con los origenes segun la variable orig usada mas arriba
vec.origenes <- names(orig)
for (i in (1:length(vec.origenes))){
ploteo(vec.origenes[i], colors()[i+7])
}
points(x=new.df.frec.viajes$long.des,
y=new.df.frec.viajes$lat.des,
col="slateblue", cex=2, pch=20)
text(new.df.frec.viajes$Destino,
x=new.df.frec.viajes$long.des,
y=new.df.frec.viajes$lat.des,
col="#ff8142", cex=1, pos=4)
library(ggmap)
library(maps)
library(mapdata)
library(geosphere)
# Tomo datos coordenados de argentina, segun el dataframe dado por map_data
arg <- map_data("world", region = "Argentina")
# Limites coordenados aproximados de Argentina
# los calculo como el maximo y el minimo de las coordenadas en el dataframe
xlim <- c(min(arg$long), max(arg$long))
ylim <- c(min(arg$lat), max(arg$lat))
# Origen (string) identificara el origen segun el dataframe que tenemos
# El color (string) sera un color que represente a este origen
ploteo <- function(origen, color) {
df.Origen <- new.df.frec.viajes %>%
filter(
Origen == origen
) %>%
select( long.or, lat.or, long.des, lat.des, n)
for (i in (1:length(df.Origen$long.or))){
inter <- gcIntermediate(c(df.Origen$long.or[i], df.Origen$lat.or[i]),
c(df.Origen$long.des[i], df.Origen$lat.des[i]),
n = df.Origen$n[i]*3,
addStartEnd=TRUE,
breakAtDateLine=T
)
lines(inter, col=color, lwd=df.Origen$n[i]/100)
}
}
# Creo un mapa para la Argentina
map( 'world', col="#cfcfcf", fill=TRUE, bg="white", lwd=0.05, xlim=xlim, ylim=ylim)
# Creo un vector con los origenes segun la variable orig usada mas arriba
vec.origenes <- names(orig)
for (i in (1:length(vec.origenes))){
ploteo(vec.origenes[i], colors()[i+7])
cat("Origen: ", vec.origenes[i], "color identificador : ", colors()[i+7], "\n")
}
points(x=new.df.frec.viajes$long.des,
y=new.df.frec.viajes$lat.des,
col="slateblue", cex=2, pch=20)
text(new.df.frec.viajes$Destino,
x=new.df.frec.viajes$long.des,
y=new.df.frec.viajes$lat.des,
col="#ff8142", cex=1, pos=4)
library(ggmap)
library(maps)
library(mapdata)
library(geosphere)
# Tomo datos coordenados de argentina, segun el dataframe dado por map_data
arg <- map_data("world", region = "Argentina")
# Limites coordenados aproximados de Argentina
# los calculo como el maximo y el minimo de las coordenadas en el dataframe
xlim <- c(min(arg$long), max(arg$long))
ylim <- c(min(arg$lat), max(arg$lat))
# Origen (string) identificara el origen segun el dataframe que tenemos
# El color (string) sera un color que represente a este origen
ploteo <- function(origen, color) {
df.Origen <- new.df.frec.viajes %>%
filter(
Origen == origen
) %>%
select( long.or, lat.or, long.des, lat.des, n)
for (i in (1:length(df.Origen$long.or))){
inter <- gcIntermediate(c(df.Origen$long.or[i], df.Origen$lat.or[i]),
c(df.Origen$long.des[i], df.Origen$lat.des[i]),
n = df.Origen$n[i]*3,
addStartEnd=TRUE,
breakAtDateLine=T
)
lines(inter, col=color, lwd=df.Origen$n[i]/100)
}
}
# Creo un mapa para la Argentina
map( 'world', col="#cfcfcf", fill=TRUE, bg="white", lwd=0.05, xlim=xlim, ylim=ylim)
# Creo un vector con los origenes segun la variable orig usada mas arriba
vec.origenes <- names(orig)
for (i in (1:length(vec.origenes))){
ploteo(vec.origenes[i], colors()[i+7])
cat("Origen: ", vec.origenes[i], "color identificador : ", colors()[i+10], "\n")
}
points(x=new.df.frec.viajes$long.des,
y=new.df.frec.viajes$lat.des,
col="slateblue", cex=2, pch=20)
text(new.df.frec.viajes$Destino,
x=new.df.frec.viajes$long.des,
y=new.df.frec.viajes$lat.des,
col="#ff8142", cex=1, pos=4)
## La idea de este codigo es que cuando ustedes lo tengan a mano
## si oueden correrlo con , fig.show='animate' ouedan ver la
## Secuencia de como esta cada uno relacionado con todos.
## A mi me falto tener instalado ffmep en windows cosa
## que se me complico instalar antes de la entrega
grafica.grafo.origen <- function(df, filtro){
# Filtra el dataset
dt <- df %>% filter(Origen == filtro)
# crea el grafo
gf <- graph.data.frame(dt, directed = F)
# Dibuja el grafo
plot.igraph( gf,
vertex.frame.color = "Forestgreen",
vertex.label.cex=c(1.5,1,0.5),
vertex.label.dist=0,
edge.color="black",
edge.curved = F,
edge.width = E(gf)/30)
}
nombres <- names(table(frec.viajes$Origen))
for (i in (1:4)){
grafica.grafo.origen(frec.viajes, nombres[i])
}
library(ggmap)
library(maps)
library(mapdata)
library(geosphere)
# Tomo datos coordenados de argentina, segun el dataframe dado por map_data
arg <- map_data("world", region = "Argentina")
# Limites coordenados aproximados de Argentina
# los calculo como el maximo y el minimo de las coordenadas en el dataframe
xlim <- c(min(arg$long), max(arg$long))
ylim <- c(min(arg$lat), max(arg$lat))
# Origen (string) identificara el origen segun el dataframe que tenemos
# El color (string) sera un color que represente a este origen
ploteo <- function(origen, color) {
df.Origen <- new.df.frec.viajes %>%
filter(
Origen == origen
) %>%
select( long.or, lat.or, long.des, lat.des, n)
for (i in (1:length(df.Origen$long.or))){
inter <- gcIntermediate(c(df.Origen$long.or[i], df.Origen$lat.or[i]),
c(df.Origen$long.des[i], df.Origen$lat.des[i]),
n = df.Origen$n[i]*3,
addStartEnd=TRUE,
breakAtDateLine=T
)
lines(inter, col=color, lwd=df.Origen$n[i]/100)
}
}
# Creo un mapa para la Argentina
map( 'world', col="#cfcfcf", fill=TRUE, bg="white", lwd=0.05, xlim=xlim, ylim=ylim)
# Creo un vector con los origenes segun la variable orig usada mas arriba
vec.origenes <- names(orig)
for (i in (1:length(vec.origenes))){
ploteo(vec.origenes[i], colors()[i+7])
cat("Origen: ", vec.origenes[i], "color identificador : ", colors()[i+10], "\n")
}
points(x=new.df.frec.viajes$long.des,
y=new.df.frec.viajes$lat.des,
col="slateblue", cex=2, pch=20)
text(new.df.frec.viajes$Destino,
x=new.df.frec.viajes$long.des,
y=new.df.frec.viajes$lat.des,
col="#ff8142", cex=1, pos=4)
