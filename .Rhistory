grafica.grafo.origen(frec.viajes, "EZE")
grafica.grafo.origen <- function(df, filtro){
# Filtra el dataset
dt <- df %>% filter(Origen == filtro)
# crea el grafo
gf <- graph.data.frame(data.EZE, directed = F)
# Dibuja el grafo
plot.igraph( gf,
vertex.frame.color = "Forestgreen",
vertex.label.cex=c(1.5,1,0.5),
vertex.label.dist=0,
edge.color="black",
edge.curved = F,
edge.width = E(gf)/30)
}
for (i in (1:length(dim(frec.viajes)[1]))){
grafica.grafo.origen(frec.viajes, frec.viajes$Origen[i])
}
grafica.grafo.origen <- function(df, filtro){
# Filtra el dataset
dt <- df %>% filter(Origen == filtro)
# crea el grafo
gf <- graph.data.frame(data.EZE, directed = F)
# Dibuja el grafo
plot.igraph( gf,
vertex.frame.color = "Forestgreen",
vertex.label.cex=c(1.5,1,0.5),
vertex.label.dist=0,
edge.color="black",
edge.curved = F,
edge.width = E(gf)/30)
}
for (i in (1:length(dim(frec.viajes)[1]))){
grafica.grafo.origen(frec.viajes, frec.viajes$Origen[i])
}
length(dim(frec.viajes)[1]
grafica.grafo.origen <- function(df, filtro){
# Filtra el dataset
dt <- df %>% filter(Origen == filtro)
# crea el grafo
gf <- graph.data.frame(data.EZE, directed = F)
# Dibuja el grafo
plot.igraph( gf,
vertex.frame.color = "Forestgreen",
vertex.label.cex=c(1.5,1,0.5),
vertex.label.dist=0,
edge.color="black",
edge.curved = F,
edge.width = E(gf)/30)
}
for (i in (1:length(dim(frec.viajes)[1]))){
grafica.grafo.origen(frec.viajes, frec.viajes$Origen[i])
}
length(dim(frec.viajes$Origen)[1]
grafica.grafo.origen <- function(df, filtro){
# Filtra el dataset
dt <- df %>% filter(Origen == filtro)
# crea el grafo
gf <- graph.data.frame(data.EZE, directed = F)
# Dibuja el grafo
plot.igraph( gf,
vertex.frame.color = "Forestgreen",
vertex.label.cex=c(1.5,1,0.5),
vertex.label.dist=0,
edge.color="black",
edge.curved = F,
edge.width = E(gf)/30)
}
for (i in (1:length(dim(frec.viajes)[1]))){
grafica.grafo.origen(frec.viajes, frec.viajes$Origen[i])
}
length(dim(frec.viajes$Origen))[1]
grafica.grafo.origen <- function(df, filtro){
# Filtra el dataset
dt <- df %>% filter(Origen == filtro)
# crea el grafo
gf <- graph.data.frame(data.EZE, directed = F)
# Dibuja el grafo
plot.igraph( gf,
vertex.frame.color = "Forestgreen",
vertex.label.cex=c(1.5,1,0.5),
vertex.label.dist=0,
edge.color="black",
edge.curved = F,
edge.width = E(gf)/30)
}
for (i in (1:length(dim(frec.viajes)[1]))){
grafica.grafo.origen(frec.viajes, frec.viajes$Origen[i])
}
length(dim(frec.viajes$Origen)[1])
grafica.grafo.origen <- function(df, filtro){
# Filtra el dataset
dt <- df %>% filter(Origen == filtro)
# crea el grafo
gf <- graph.data.frame(data.EZE, directed = F)
# Dibuja el grafo
plot.igraph( gf,
vertex.frame.color = "Forestgreen",
vertex.label.cex=c(1.5,1,0.5),
vertex.label.dist=0,
edge.color="black",
edge.curved = F,
edge.width = E(gf)/30)
}
for (i in (1:length(dim(frec.viajes)[1]))){
grafica.grafo.origen(frec.viajes, frec.viajes$Origen[i])
}
length(dim(frec.viajes)[1])
grafica.grafo.origen <- function(df, filtro){
# Filtra el dataset
dt <- df %>% filter(Origen == filtro)
# crea el grafo
gf <- graph.data.frame(data.EZE, directed = F)
# Dibuja el grafo
plot.igraph( gf,
vertex.frame.color = "Forestgreen",
vertex.label.cex=c(1.5,1,0.5),
vertex.label.dist=0,
edge.color="black",
edge.curved = F,
edge.width = E(gf)/30)
}
for (i in (1:length(dim(frec.viajes)[1]))){
grafica.grafo.origen(frec.viajes, frec.viajes$Origen[i])
}
length(dim(frec.viajes)[[1]])
grafica.grafo.origen <- function(df, filtro){
# Filtra el dataset
dt <- df %>% filter(Origen == filtro)
# crea el grafo
gf <- graph.data.frame(data.EZE, directed = F)
# Dibuja el grafo
plot.igraph( gf,
vertex.frame.color = "Forestgreen",
vertex.label.cex=c(1.5,1,0.5),
vertex.label.dist=0,
edge.color="black",
edge.curved = F,
edge.width = E(gf)/30)
}
for (i in (1:length(dim(frec.viajes)[1]))){
grafica.grafo.origen(frec.viajes, frec.viajes$Origen[i])
}
dim(frec.viajes)
grafica.grafo.origen <- function(df, filtro){
# Filtra el dataset
dt <- df %>% filter(Origen == filtro)
# crea el grafo
gf <- graph.data.frame(data.EZE, directed = F)
# Dibuja el grafo
plot.igraph( gf,
vertex.frame.color = "Forestgreen",
vertex.label.cex=c(1.5,1,0.5),
vertex.label.dist=0,
edge.color="black",
edge.curved = F,
edge.width = E(gf)/30)
}
for (i in (1:length(dim(frec.viajes)[1]))){
grafica.grafo.origen(frec.viajes, frec.viajes$Origen[i])
}
dim(frec.viajes)[1]
grafica.grafo.origen <- function(df, filtro){
# Filtra el dataset
dt <- df %>% filter(Origen == filtro)
# crea el grafo
gf <- graph.data.frame(data.EZE, directed = F)
# Dibuja el grafo
plot.igraph( gf,
vertex.frame.color = "Forestgreen",
vertex.label.cex=c(1.5,1,0.5),
vertex.label.dist=0,
edge.color="black",
edge.curved = F,
edge.width = E(gf)/30)
}
for (i in (1:dim(frec.viajes)[1]))){
grafica.grafo.origen <- function(df, filtro){
# Filtra el dataset
dt <- df %>% filter(Origen == filtro)
# crea el grafo
gf <- graph.data.frame(data.EZE, directed = F)
# Dibuja el grafo
plot.igraph( gf,
vertex.frame.color = "Forestgreen",
vertex.label.cex=c(1.5,1,0.5),
vertex.label.dist=0,
edge.color="black",
edge.curved = F,
edge.width = E(gf)/30)
}
for (i in (1:dim(frec.viajes)[1])){
grafica.grafo.origen(frec.viajes, frec.viajes$Origen[i])
}
grafica.grafo.origen <- function(df, filtro){
# Filtra el dataset
dt <- df %>% filter(Origen == filtro)
# crea el grafo
gf <- graph.data.frame(data.EZE, directed = F)
# Dibuja el grafo
plot.igraph( gf,
vertex.frame.color = "Forestgreen",
vertex.label.cex=c(1.5,1,0.5),
vertex.label.dist=0,
edge.color="black",
edge.curved = F,
edge.width = E(gf)/30)
}
for (i in (1:dim(frec.viajes)[1])){
print(frec.viajes$Origen[i])
grafica.grafo.origen(frec.viajes, frec.viajes$Origen[i])
}
grafica.grafo.origen <- function(df, filtro){
# Filtra el dataset
dt <- df %>% filter(Origen == filtro)
# crea el grafo
gf <- graph.data.frame(data.EZE, directed = F)
# Dibuja el grafo
plot.igraph( gf,
vertex.frame.color = "Forestgreen",
vertex.label.cex=c(1.5,1,0.5),
vertex.label.dist=0,
edge.color="black",
edge.curved = F,
edge.width = E(gf)/30)
}
for (i in (1:dim(frec.viajes)[1])){
if(frec.viajes$Origen[i] != frec.viajes$Origen[i+1]){
grafica.grafo.origen(frec.viajes, frec.viajes$Origen[i])
}
}
grafica.grafo.origen <- function(df, filtro){
# Filtra el dataset
dt <- df %>% filter(Origen == filtro)
# crea el grafo
gf <- graph.data.frame(data.EZE, directed = F)
# Dibuja el grafo
plot.igraph( gf,
vertex.frame.color = "Forestgreen",
vertex.label.cex=c(1.5,1,0.5),
vertex.label.dist=0,
edge.color="black",
edge.curved = F,
edge.width = E(gf)/30)
}
for (i in (1:dim(frec.viajes)[1])){
if(frec.viajes$Origen[i] != frec.viajes$Origen[i-1]){
grafica.grafo.origen(frec.viajes, frec.viajes$Origen[i])
}
}
grafica.grafo.origen <- function(df, filtro){
# Filtra el dataset
dt <- df %>% filter(Origen == filtro)
# crea el grafo
gf <- graph.data.frame(data.EZE, directed = F)
# Dibuja el grafo
plot.igraph( gf,
vertex.frame.color = "Forestgreen",
vertex.label.cex=c(1.5,1,0.5),
vertex.label.dist=0,
edge.color="black",
edge.curved = F,
edge.width = E(gf)/30)
}
for (i in (1:dim(frec.viajes)[1])){
if(frec.viajes$Origen[i+1 != frec.viajes$Origen[i]){
grafica.grafo.origen <- function(df, filtro){
# Filtra el dataset
dt <- df %>% filter(Origen == filtro)
# crea el grafo
gf <- graph.data.frame(data.EZE, directed = F)
# Dibuja el grafo
plot.igraph( gf,
vertex.frame.color = "Forestgreen",
vertex.label.cex=c(1.5,1,0.5),
vertex.label.dist=0,
edge.color="black",
edge.curved = F,
edge.width = E(gf)/30)
}
for (i in (1:dim(frec.viajes)[1])){
if(frec.viajes$Origen[i+1] != frec.viajes$Origen[i]){
grafica.grafo.origen(frec.viajes, frec.viajes$Origen[i])
}
}
grafica.grafo.origen <- function(df, filtro){
# Filtra el dataset
dt <- df %>% filter(Origen == filtro)
# crea el grafo
gf <- graph.data.frame(data.EZE, directed = F)
# Dibuja el grafo
plot.igraph( gf,
vertex.frame.color = "Forestgreen",
vertex.label.cex=c(1.5,1,0.5),
vertex.label.dist=0,
edge.color="black",
edge.curved = F,
edge.width = E(gf)/30)
}
nombres <- names(table(frec.viajes))
nombres
#grafica.grafo.origen(frec.viajes, frec.viajes$Origen[i])
grafica.grafo.origen <- function(df, filtro){
# Filtra el dataset
dt <- df %>% filter(Origen == filtro)
# crea el grafo
gf <- graph.data.frame(data.EZE, directed = F)
# Dibuja el grafo
plot.igraph( gf,
vertex.frame.color = "Forestgreen",
vertex.label.cex=c(1.5,1,0.5),
vertex.label.dist=0,
edge.color="black",
edge.curved = F,
edge.width = E(gf)/30)
}
nombres <- (table(frec.viajes))
nombres
#grafica.grafo.origen(frec.viajes, frec.viajes$Origen[i])
grafica.grafo.origen <- function(df, filtro){
# Filtra el dataset
dt <- df %>% filter(Origen == filtro)
# crea el grafo
gf <- graph.data.frame(data.EZE, directed = F)
# Dibuja el grafo
plot.igraph( gf,
vertex.frame.color = "Forestgreen",
vertex.label.cex=c(1.5,1,0.5),
vertex.label.dist=0,
edge.color="black",
edge.curved = F,
edge.width = E(gf)/30)
}
nombres <- frec.viajes$Origen
table(nombres)
grafica.grafo.origen <- function(df, filtro){
# Filtra el dataset
dt <- df %>% filter(Origen == filtro)
# crea el grafo
gf <- graph.data.frame(data.EZE, directed = F)
# Dibuja el grafo
plot.igraph( gf,
vertex.frame.color = "Forestgreen",
vertex.label.cex=c(1.5,1,0.5),
vertex.label.dist=0,
edge.color="black",
edge.curved = F,
edge.width = E(gf)/30)
}
nombres <- frec.viajes$Origen
names(table(nombres))
grafica.grafo.origen <- function(df, filtro){
# Filtra el dataset
dt <- df %>% filter(Origen == filtro)
# crea el grafo
gf <- graph.data.frame(dt, directed = F)
# Dibuja el grafo
plot.igraph( gf,
vertex.frame.color = "Forestgreen",
vertex.label.cex=c(1.5,1,0.5),
vertex.label.dist=0,
edge.color="black",
edge.curved = F,
edge.width = E(gf)/30)
}
nombres <- names(table(frec.viajes$Origen))
for (i in (1:4)){
grafica.grafo.origen(frec.viajes, nombres[1])
}
grafica.grafo.origen <- function(df, filtro){
# Filtra el dataset
dt <- df %>% filter(Origen == filtro)
# crea el grafo
gf <- graph.data.frame(dt, directed = F)
# Dibuja el grafo
plot.igraph( gf,
vertex.frame.color = "Forestgreen",
vertex.label.cex=c(1.5,1,0.5),
vertex.label.dist=0,
edge.color="black",
edge.curved = F,
edge.width = E(gf)/30)
}
nombres <- names(table(frec.viajes$Origen))
for (i in (1:4)){
grafica.grafo.origen(frec.viajes, nombres[i])
}
grafica.grafo.origen <- function(df, filtro){
# Filtra el dataset
dt <- df %>% filter(Origen == filtro)
# crea el grafo
gf <- graph.data.frame(dt, directed = F)
# Dibuja el grafo
plot.igraph( gf,
vertex.frame.color = "Forestgreen",
vertex.label.cex=c(1.5,1,0.5),
vertex.label.dist=0,
edge.color="black",
edge.curved = F,
edge.width = E(gf)/30)
}
nombres <- names(table(frec.viajes$Origen))
for (i in (1:4)){
grafica.grafo.origen(frec.viajes, nombres[i])
}
grafica.grafo.origen <- function(df, filtro){
# Filtra el dataset
dt <- df %>% filter(Origen == filtro)
# crea el grafo
gf <- graph.data.frame(dt, directed = F)
# Dibuja el grafo
plot.igraph( gf,
vertex.frame.color = "Forestgreen",
vertex.label.cex=c(1.5,1,0.5),
vertex.label.dist=0,
edge.color="black",
edge.curved = F,
edge.width = E(gf)/30)
}
nombres <- names(table(frec.viajes$Origen))
for (i in (1:4)){
grafica.grafo.origen(frec.viajes, nombres[i])
}
grafica.grafo.origen <- function(df, filtro){
# Filtra el dataset
dt <- df %>% filter(Origen == filtro)
# crea el grafo
gf <- graph.data.frame(dt, directed = F)
# Dibuja el grafo
plot.igraph( gf,
vertex.frame.color = "Forestgreen",
vertex.label.cex=c(1.5,1,0.5),
vertex.label.dist=0,
edge.color="black",
edge.curved = F,
edge.width = E(gf)/30)
}
nombres <- names(table(frec.viajes$Origen))
for (i in (1:4)){
grafica.grafo.origen(frec.viajes, nombres[i])
}
knitr::opts_chunk$set(collapse = TRUE)
grafica.grafo.origen <- function(df, filtro){
# Filtra el dataset
dt <- df %>% filter(Origen == filtro)
# crea el grafo
gf <- graph.data.frame(dt, directed = F)
# Dibuja el grafo
plot.igraph( gf,
vertex.frame.color = "Forestgreen",
vertex.label.cex=c(1.5,1,0.5),
vertex.label.dist=0,
edge.color="black",
edge.curved = F,
edge.width = E(gf)/30)
}
nombres <- names(table(frec.viajes$Origen))
knitr::opts_chunk$set(collapse = TRUE)
# Corro las librerias necesarias
library(ggraph)
library(ggplot2)
# library(ggthemes)
library(dplyr)
library(igraph)
# Leo el csv con los datos
df.vuelos <- read.csv("vuelos_2021.csv")
knitr::opts_chunk$set(collapse = TRUE)
# Corro las librerias necesarias
library(ggraph)
library(ggplot2)
# library(ggthemes)
library(dplyr)
library(igraph)
# Leo el csv con los datos
df.vuelos <- read.csv("./csv/vuelos_2021.csv")
df.vuelos
frec.viajes <- df.vuelos %>% select(Origen, Destino) %>% group_by(Origen,Destino) %>% summarise(n=n())
frec.viajes
# Tomo el dataframe del grafo y pido que no sea dirigido
grafo <- graph.data.frame(frec.viajes, directed = F)
plot.igraph( grafo,
vertex.frame.color = "Forestgreen",
vertex.size=degree(grafo, mode = "out"),
vertex.label.cex=c(2,2.5,3),
vertex.label.dist=0,
edge.color="black",
edge.curved = F,
edge.width = E(grafo)/30)
graph <- graph_from_data_frame(frec.viajes)
ggraph(graph, layout = 'kk') +  geom_edge_link(aes(colour = factor(n))) + geom_node_point()
layout <- create_layout(graph, layout = 'drl')
dendrogram <- as.dendrogram(hclust(dist(frec.viajes$n)))
ggraph(dendrogram, 'dendrogram') +
geom_edge_elbow()
grafica.grafo.origen <- function(df, filtro){
# Filtra el dataset
dt <- df %>% filter(Origen == filtro)
# crea el grafo
gf <- graph.data.frame(dt, directed = F)
# Dibuja el grafo
plot.igraph( gf,
vertex.frame.color = "Forestgreen",
vertex.label.cex=c(1.5,1,0.5),
vertex.label.dist=0,
edge.color="black",
edge.curved = F,
edge.width = E(gf)/30)
}
nombres <- names(table(frec.viajes$Origen))
for (i in (1:4)){
grafica.grafo.origen(frec.viajes, nombres[i])
}
